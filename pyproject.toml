[project]
name = "photobooth-app"
requires-python = ">=3.10,<3.14"
dynamic = ["version"]
description = "Photobooth app written in Python supporting DSLR, picamera2 and webcameras"
authors = [{ name = "Michael G", email = "me@mgineer85.de" }]
maintainers = [{ name = "Michael G", email = "me@mgineer85.de" }]
readme = "README.md"
license = { text = "MIT" }
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Multimedia :: Graphics",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Multimedia :: Graphics :: Capture :: Digital Camera",
]
keywords = [
  "photobooth",
  "photobooth-app",
  "wedding",
  "booth",
  "raspberry-pi",
  "camera",
  "python",
  "filter",
  "gphoto2",
  "dslr",
  "picamera2",
]
dependencies = [
    "fastapi>=0.106.0",
    "opencv-python-headless>=4.10.0.84",
    "numpy>=2.0.0",
    "simplejpeg>=1.7.4", # might be installed globally already on Pi but in older version incompatible to numpy2
    "pillow>=10.0.0",
    "psutil>=5.9.0",
    "pydantic>=2.7.0",
    "pydantic-extra-types>=2.3.0",
    "pydantic-settings>=2.1.0",
    "pyturbojpeg>=1.7.0",
    "requests>=2.31.0",
    "sse-starlette>=2.2.0",
    "uvicorn>=0.24",
    "python-dotenv>=1.0.0",
    "pyserial~=3.5",
    "jsonref>=1.1.0",
    "pilgram2>=2.0.2",
    "linuxpy>=0.10.0; platform_system == 'Linux'",
    "gpiozero~=2.0.0",
    "gphoto2~=2.5.0; platform_system == 'Linux' or platform_system == 'Darwin'",
    "python-statemachine>=2.3.3",
    "python-multipart>=0.0.6",
    "pyjwt[crypto]>=2.8.0",
]

# libcamera/picamera2 are avail for now only as system python package - isolated env cannot use them without global access
# system-packages = true

[project.scripts]
photobooth = "photobooth.__main__:main"

[project.urls]
homepage = "https://github.com/photobooth-app/photobooth-app"
repository = "https://github.com/photobooth-app/photobooth-app"
documentation = "https://photobooth-app.org"

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.coverage.run]
# disable couldnt-parse: https://github.com/nedbat/coveragepy/issues/1392
disable_warnings = ["couldnt-parse"]
omit = ["test_*.py", "./tests/*", "./photobooth/vendor/*"]
parallel = true
concurrency = ["thread", "multiprocessing"]


[tool.ruff]
line-length = 150
extend-exclude = ["vendor"]

[tool.ruff.lint]
select = [
  "E",  # pycodestyle
  "W",  # pycodestyle
  "F",  # pyflakes
  "B",  # bugbear
  "UP", # pyupgrade
  "I",  # isort
  #"D",   # pydocstyle   # add later
]
ignore = [
  "B008", #used for DI injection
]

[tool.ruff.lint.per-file-ignores]
"photobooth/services/config/groups/*.py" = ["E501"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pdm]
version = { source = "file", path = "photobooth/__version__.py" }

[tool.pdm.dev-dependencies]
test = [
  "pytest>=7.4.0",
  "pytest-benchmark>=4.0.0",
  "pytest-cov>=4.1.0",
  "coverage[toml]>=7.4.0",
  "httpx-sse>=0.4.0",
  "httpx>=0.25.0",
  "pytest-httpserver>=1.0.8",
  "pyvips>=2.2.2",
  "pydot>=2.0.0",
  "simplejpeg>=1.7.4",
]
lint = ["ruff>=0.1.8"]

[tool.pdm.build]
includes = ["./photobooth"]

[tool.pdm.scripts]
test = "pytest --basetemp=./tests_tmp/ -v ./tests/tests --cov-report=term --cov-report=xml:coverage.xml --cov"
benchmark = "pytest --basetemp=./tests_tmp/ -v ./tests/benchmarks"
